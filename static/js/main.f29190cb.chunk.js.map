{"version":3,"sources":["context/themeContext.js","hoc/withTheme.js","components/AddContactForm.js","components/ContactListItem.js","components/ContactList.js","components/Filter.js","components/ThemeSelector.js","components/Container.js","redux/phoneBookActions.js","components/App.js","redux/phoneBookReducer.js","redux/store.js","index.js"],"names":["themeConfig","light","fontColor","bodybg","dark","Context","React","createContext","ThemeContext","toggleTheme","setState","state","type","config","Provider","value","this","props","children","Component","Consumer","withTheme","WrappedComponent","theme","ContactsForm","styled","form","themeProps","InputLabel","label","FormInput","input","SubmitButton","button","name","number","handleChange","e","target","handleSubmit","preventDefault","onAddContact","onSubmit","htmlFor","id","autoComplete","onChange","ListItem","li","DeleteButton","ContactListItemWrapper","div","handleDelete","contact","key","onClick","List","ul","contacts","map","FilterInput","ToggleLabel","span","checked","Wrapper","addContact","createAction","payload","uuid","deleteContact","filterUpdated","loadContacts","App","onAddValidContact","alert","find","element","toLowerCase","filter","indexOf","storedContacts","localStorage","getItem","prevProps","prevState","setItem","JSON","stringify","getFilteredContacts","onDeleteContact","connect","dispatch","phoneBookActions","phoneBookReducer","createReducer","action","parse","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f29190cb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst themeConfig = {\r\n    light: {\r\n        fontColor: \"black\",\r\n        bodybg: \"#fff\"\r\n    },\r\n    dark: {\r\n        fontColor: \"white\",\r\n        bodybg: \"#333333\"\r\n    }\r\n};\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n    static Consumer = Context.Consumer;\r\n\r\n    toggleTheme = () => {\r\n        this.setState(state => ({\r\n            type: state.type === \"dark\" ? \"light\" : \"dark\"\r\n        }));\r\n    };\r\n\r\n    state = {\r\n        type: \"light\",\r\n        toggleTheme: this.toggleTheme,\r\n        config: themeConfig\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <Context.Provider value={this.state}>\r\n              {this.props.children}\r\n          </Context.Provider>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ThemeContext from \"../context/themeContext\";\r\n\r\nconst withTheme = WrappedComponent => {\r\n    return function WithTheme(props) {\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {theme => <WrappedComponent {...props} theme={theme} />}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    };\r\n};\r\n\r\nexport default withTheme;","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\"\r\n\r\nconst ContactsForm = styled.form`\r\nborder: 2px solid ${props => props.themeProps.fontColor};\r\nmax-width: 400px;\r\npadding: 10px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\nmax-width: 40%;\r\nfont-size: 20px;\r\ncolor: ${props => props.themeProps.fontColor}\r\n`;\r\n\r\nconst FormInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\nmax-width: 30%;\r\nborder-radius: 5px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nclass AddContactForm extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.target;\r\n\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({name: '', number: ''});\r\n  };\r\n\r\n  render() {\r\n\r\n    const config = this.props.theme.config[this.props.theme.type];\r\n\r\n    return (\r\n        <ContactsForm themeProps={config} onSubmit={this.handleSubmit}>\r\n          <InputLabel themeProps={config} htmlFor=\"name\">Name</InputLabel>\r\n          <FormInput themeProps={config} type=\"text\" name=\"name\" id=\"name\" value={this.state.name} autoComplete='off'\r\n                     onChange={this.handleChange}/>\r\n\r\n          <InputLabel themeProps={config} htmlFor=\"number\">Number</InputLabel>\r\n          <FormInput themeProps={config} type=\"tel\" name=\"number\" id=\"number\" value={this.state.number}\r\n                     autoComplete='off'\r\n                     onChange={this.handleChange}/>\r\n\r\n          <SubmitButton themeProps={config} type=\"submit\">Add contact</SubmitButton>\r\n        </ContactsForm>\r\n    )\r\n  }\r\n};\r\n\r\nAddContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(AddContactForm)","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst ListItem = styled.li`\r\nmargin-right: 30px;\r\nmin-width: 50%;\r\n\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\nmax-width: 50%;\r\nborder-radius: 5px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst ContactListItemWrapper = styled.div`\r\ndisplay: flex;\r\nmargin-bottom: 10px;\r\n`;\r\n\r\n\r\nfunction ContactListItem({handleDelete, contact: {id, name, number}, theme}) {\r\n\r\n  return (\r\n    <ContactListItemWrapper>\r\n      <ListItem key={id}>{name}: {number} </ListItem>\r\n      <DeleteButton themeProps={theme.config[theme.type]} onClick={() => handleDelete(id)}>Delete</DeleteButton>\r\n    </ContactListItemWrapper>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default withTheme(ContactListItem)","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport withTheme from \"../hoc/withTheme\"\r\n\r\nconst List = styled.ul`\r\nmax-width: 400px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nfunction ContactList({contacts, handleDelete}) {\r\n\r\n  return (\r\n    <List>\r\n      {contacts.map(contact => {\r\n        return <ContactListItem key={contact.id} contact={contact} handleDelete={handleDelete}/>\r\n      })}\r\n    </List>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  handleDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(ContactList)","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst FilterInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nfunction Filter({handleChange, theme}) {\r\n\r\n  return (\r\n    <FilterInput themeProps={theme.config[theme.type]} type=\"text\" onChange={handleChange} name=\"filter\" autoComplete='off'/>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(Filter);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"react-toggle/style.css\";\r\nimport Toggle from 'react-toggle';\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst ToggleLabel = styled.span`\r\nmargin: 10px;\r\n`;\r\n\r\nfunction ThemeSelector(themeProps) {\r\n\r\n  return (\r\n    <label>\r\n      <ToggleLabel>{themeProps.theme.type}</ToggleLabel>\r\n      <Toggle\r\n        type=\"checkbox\"\r\n        checked={themeProps.theme.type === \"dark\"}\r\n        onChange={() => themeProps.theme.toggleTheme()}\r\n      />\r\n    </label>\r\n\r\n  );\r\n}\r\n\r\nexport default withTheme(ThemeSelector)","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst Wrapper = styled.div`\r\nmargin: 0;\r\npadding: 10px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nfunction Container({children, theme}) {\r\n\r\n  return (\r\n    <Wrapper themeProps={theme.config[theme.type]}>\r\n      {children}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default withTheme(Container);","// import { Type } from './actionTypes'\r\nimport {createAction} from '@reduxjs/toolkit';\r\nimport {uuid} from \"uuidv4\";\r\n\r\nexport const addContact = createAction('ADD_CONTACT', (name, number) => ({\r\n  payload: {\r\n    id: uuid(),\r\n    name,\r\n    number\r\n  }\r\n}));\r\nexport const deleteContact = createAction('DELETE_CONTACT');\r\nexport const filterUpdated = createAction('UPDATE_FILTER');\r\nexport const loadContacts = createAction('LOAD_CONTACTS');\r\n//\r\n// export const addContact = (name, number) => {\r\n//\r\n//     return {\r\n//         type: Type.ADD_CONTACT,\r\n//         payload: {\r\n//             id: uuid(),\r\n//             name: name,\r\n//             number: number\r\n//         }\r\n//     }\r\n// };\r\n//\r\n// export const deleteContact = (id) => {\r\n//     return {\r\n//         type: Type.DELETE_CONTACT,\r\n//         payload: { id }\r\n//     }\r\n// };\r\n//\r\n// export const filterUpdated = (filter) => {\r\n//     return {\r\n//         type: Type.UPDATE_FILTER,\r\n//         payload: { filter }\r\n//     }\r\n// };\r\n//\r\n// export const loadContacts = (contacts) => {\r\n//     return {\r\n//         type: Type.LOAD_CONTACTS,\r\n//         payload:  {contacts}\r\n//     }\r\n// };","import React, { Component } from \"react\";\r\nimport AddContactForm from \"./AddContactForm\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport ThemeSelector from \"./ThemeSelector\";\r\nimport Container from \"./Container\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport { connect } from 'react-redux';\r\nimport * as phoneBookActions from '../redux/phoneBookActions';\r\n\r\nclass App extends Component {\r\n\r\n  getFilteredContacts() {\r\n    const { contacts, filter } = this.props;\r\n    if (filter === \"\")\r\n      return contacts;\r\n    else\r\n      return contacts.filter(contact => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const storedContacts = localStorage.getItem('contacts');\r\n    if (storedContacts) {\r\n      this.props.loadContacts(storedContacts);\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value } = e.target;\r\n\r\n    this.props.filterUpdated(value);\r\n  };\r\n\r\n  onAddValidContact = (name, number) => {\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      return alert(\"Please fill all fields!\");\r\n    }\r\n\r\n    if (this.props.contacts.find(element => (element.name.toLowerCase() === name.toLowerCase()))) {\r\n      return alert(\"This contact already added!\")\r\n    }\r\n\r\n    this.props.onAddContact(name, number);\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.contacts !== this.props.contacts)\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Container>\r\n        <ThemeSelector />\r\n        <h2>PhoneBook</h2>\r\n        <AddContactForm onAddContact={this.onAddValidContact} />\r\n        <h3>Contacts</h3>\r\n        <Filter handleChange={this.handleChange} />\r\n        <ContactList contacts={this.getFilteredContacts()} handleDelete={this.props.onDeleteContact} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { contacts, filter } = state.contacts;\r\n  return {\r\n    contacts: contacts,\r\n    filter: filter\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddContact: (name, number) => dispatch(phoneBookActions.addContact(name, number)),\r\n    onDeleteContact: (id) => dispatch(phoneBookActions.deleteContact(id)),\r\n    filterUpdated: (filter) => dispatch(phoneBookActions.filterUpdated(filter)),\r\n    loadContacts: (contacts) => dispatch(phoneBookActions.loadContacts(contacts)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(App));","// import {Type} from './actionTypes';\r\nimport {createReducer} from '@reduxjs/toolkit';\r\nimport {addContact, deleteContact, filterUpdated, loadContacts} from './phoneBookActions';\r\n\r\nconst initStore = {\r\n  contacts: [],\r\n  filter: ''\r\n};\r\n\r\nexport const phoneBookReducer = createReducer(initStore, {\r\n  [addContact]: (state, action) =>\r\n  {\r\n    const {payload} = action;\r\n    return {\r\n      ...state,\r\n      contacts:\r\n    [...state.contacts, payload]\r\n    }\r\n  },\r\n\r\n  [deleteContact]: (state, action) => {\r\n    const {payload} = action;\r\n    return {\r\n      ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== payload)\r\n    }\r\n  },\r\n\r\n  [filterUpdated]: (state, action) => {\r\n    const {payload} = action;\r\n    return {\r\n      ...state,\r\n      filter: payload\r\n    };\r\n  },\r\n\r\n  [loadContacts]: (state, action) => {\r\n    const {payload} = action;\r\n    return {\r\n      ...state,\r\n      contacts: JSON.parse(payload)\r\n    };\r\n  }\r\n});\r\n\r\n\r\n//\r\n// const phoneBookReducer = (store = initStore, action) => {\r\n//   switch (action.type) {\r\n//     case Type.ADD_CONTACT:\r\n//       return {\r\n//         ...store,\r\n//         contacts: [...store.contacts, action.payload]\r\n//       };\r\n//\r\n//     case Type.DELETE_CONTACT:\r\n//       return {\r\n//         ...store,\r\n//         contacts: store.contacts.filter(contact => contact.id !== action.payload.id)\r\n//       };\r\n//\r\n//     case Type.UPDATE_FILTER:\r\n//       return {\r\n//         ...store,\r\n//         filter: action.payload.filter\r\n//       };\r\n//\r\n//     case Type.LOAD_CONTACTS:\r\n//       return {\r\n//         ...store,\r\n//         contacts: JSON.parse(action.payload.contacts)\r\n//       };\r\n//\r\n//     default:\r\n//       return store;\r\n//   }\r\n// };\r\n//\r\n//\r\n// export default phoneBookReducer;","// import { createStore, combineReducers } from 'redux';\r\n// import { devToolsEnhancer } from 'redux-devtools-extension'\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\nimport {phoneBookReducer} from './phoneBookReducer';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n      contacts: phoneBookReducer\r\n    }\r\n  }\r\n);\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: phoneBookReducer\r\n// });\r\n//\r\n// const store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\n\r\n\r\nimport ThemeContext from \"./context/themeContext\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ThemeContext>\r\n            <App />\r\n        </ThemeContext>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}