{"version":3,"sources":["context/themeContext.js","hoc/withTheme.js","redux/phoneBookActions.js","components/AddContactForm.js","components/ContactListItem.js","components/ContactList.js","components/Filter.js","components/ThemeSelector.js","components/Container.js","components/App.js","redux/phoneBookReducer.js","redux/store.js","index.js"],"names":["themeConfig","light","fontColor","bodybg","dark","Context","React","createContext","ThemeContext","toggleTheme","setState","state","type","config","Provider","value","this","props","children","Component","Consumer","withTheme","WrappedComponent","theme","addContact","createAction","name","number","payload","id","uuid","deleteContact","filterUpdated","loadContacts","ContactsForm","styled","form","themeProps","InputLabel","label","FormInput","input","SubmitButton","button","AddContactForm","onAddValidContact","alert","contacts","find","element","toLowerCase","onAddContact","handleChange","e","target","handleSubmit","preventDefault","onSubmit","htmlFor","autoComplete","onChange","mapDispatchToProps","phoneBookActions","connect","items","ListItem","li","DeleteButton","ContactListItemWrapper","div","handleDelete","contact","key","onClick","List","ul","ContactList","filter","indexOf","filteredContacts","getFilteredContacts","map","onDeleteContact","dispatch","FilterInput","Filter","ToggleLabel","span","checked","Wrapper","App","storedContacts","localStorage","getItem","prevProps","prevState","setItem","JSON","stringify","createReducer","action","parse","combineReducers","store","configureStore","reducer","phoneBookReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfce18b6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst themeConfig = {\n    light: {\n        fontColor: \"black\",\n        bodybg: \"#fff\"\n    },\n    dark: {\n        fontColor: \"white\",\n        bodybg: \"#333333\"\n    }\n};\n\nconst Context = React.createContext();\n\nexport default class ThemeContext extends Component {\n    static Consumer = Context.Consumer;\n\n    toggleTheme = () => {\n        this.setState(state => ({\n            type: state.type === \"dark\" ? \"light\" : \"dark\"\n        }));\n    };\n\n    state = {\n        type: \"light\",\n        toggleTheme: this.toggleTheme,\n        config: themeConfig\n    };\n\n    render() {\n        return (\n          <Context.Provider value={this.state}>\n              {this.props.children}\n          </Context.Provider>\n        );\n    }\n}","import React from \"react\";\nimport ThemeContext from \"../context/themeContext\";\n\nconst withTheme = WrappedComponent => {\n    return function WithTheme(props) {\n        return (\n            <ThemeContext.Consumer>\n                {theme => <WrappedComponent {...props} theme={theme} />}\n            </ThemeContext.Consumer>\n        );\n    };\n};\n\nexport default withTheme;","// import { Type } from './actionTypes'\nimport {createAction} from '@reduxjs/toolkit';\nimport {uuid} from \"uuidv4\";\n\nexport const addContact = createAction('ADD_CONTACT', (name, number) => ({\n  payload: {\n    id: uuid(),\n    name,\n    number\n  }\n}));\nexport const deleteContact = createAction('DELETE_CONTACT');\nexport const filterUpdated = createAction('UPDATE_FILTER');\nexport const loadContacts = createAction('LOAD_CONTACTS');\n//\n// export const addContact = (name, number) => {\n//\n//     return {\n//         type: Type.ADD_CONTACT,\n//         payload: {\n//             id: uuid(),\n//             name: name,\n//             number: number\n//         }\n//     }\n// };\n//\n// export const deleteContact = (id) => {\n//     return {\n//         type: Type.DELETE_CONTACT,\n//         payload: { id }\n//     }\n// };\n//\n// export const filterUpdated = (filter) => {\n//     return {\n//         type: Type.UPDATE_FILTER,\n//         payload: { filter }\n//     }\n// };\n//\n// export const loadContacts = (contacts) => {\n//     return {\n//         type: Type.LOAD_CONTACTS,\n//         payload:  {contacts}\n//     }\n// };","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport { connect } from 'react-redux';\r\nimport * as phoneBookActions from '../redux/phoneBookActions';\r\n\r\nconst ContactsForm = styled.form`\r\nborder: 2px solid ${props => props.themeProps.fontColor};\r\nmax-width: 400px;\r\npadding: 10px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\nmax-width: 40%;\r\nfont-size: 20px;\r\ncolor: ${props => props.themeProps.fontColor}\r\n`;\r\n\r\nconst FormInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\nmax-width: 30%;\r\nborder-radius: 5px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nclass AddContactForm extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  onAddValidContact = (name, number) => {\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      return alert(\"Please fill all fields!\");\r\n    }\r\n\r\n    if (this.props.contacts.find(element => (element.name.toLowerCase() === name.toLowerCase()))) {\r\n      return alert(\"This contact already added!\")\r\n    }\r\n\r\n    this.props.onAddContact(name, number);\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.target;\r\n\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.onAddValidContact(this.state.name, this.state.number);\r\n    this.setState({name: '', number: ''});\r\n  };\r\n\r\n  render() {\r\n\r\n    const config = this.props.theme.config[this.props.theme.type];\r\n\r\n    return (\r\n        <ContactsForm themeProps={config} onSubmit={this.handleSubmit}>\r\n          <InputLabel themeProps={config} htmlFor=\"name\">Name</InputLabel>\r\n          <FormInput themeProps={config} type=\"text\" name=\"name\" id=\"name\" value={this.state.name} autoComplete='off'\r\n                     onChange={this.handleChange}/>\r\n\r\n          <InputLabel themeProps={config} htmlFor=\"number\">Number</InputLabel>\r\n          <FormInput themeProps={config} type=\"tel\" name=\"number\" id=\"number\" value={this.state.number}\r\n                     autoComplete='off'\r\n                     onChange={this.handleChange}/>\r\n\r\n          <SubmitButton themeProps={config} type=\"submit\">Add contact</SubmitButton>\r\n        </ContactsForm>\r\n    )\r\n  }\r\n};\r\n\r\nAddContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {contacts: state.contacts.items}\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onAddContact: (name, number) => phoneBookActions.addContact(name, number)\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(AddContactForm))","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst ListItem = styled.li`\r\nmargin-right: 30px;\r\nmin-width: 50%;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\nmax-width: 50%;\r\nborder-radius: 5px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst ContactListItemWrapper = styled.div`\r\ndisplay: flex;\r\nmargin-bottom: 10px;\r\n`;\r\n\r\n\r\nfunction ContactListItem({handleDelete, contact: {id, name, number}, theme}) {\r\n\r\n  return (\r\n    <ContactListItemWrapper>\r\n      <ListItem key={id}>{name}: {number} </ListItem>\r\n      <DeleteButton themeProps={theme.config[theme.type]} onClick={() => handleDelete(id)}>Delete</DeleteButton>\r\n    </ContactListItemWrapper>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default withTheme(ContactListItem)","import React, {Component} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport {connect} from 'react-redux';\r\nimport * as phoneBookActions from '../redux/phoneBookActions';\r\n\r\nconst List = styled.ul`\r\nmax-width: 400px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nclass ContactList extends Component {\r\n\r\n  getFilteredContacts() {\r\n    const { contacts, filter } = this.props;\r\n    if (filter === \"\")\r\n      return contacts;\r\n    else\r\n      return contacts.filter(contact => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n  }\r\n\r\n  render() {\r\n\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <List>\r\n        {filteredContacts.map(contact => {\r\n          return <ContactListItem key={contact.id} contact={contact} handleDelete={this.props.onDeleteContact}/>\r\n        })}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    filter: state.contacts.filter\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: (id) => dispatch(phoneBookActions.deleteContact(id)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(ContactList));","import React, {Component} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport {connect} from 'react-redux';\r\nimport * as phoneBookActions from '../redux/phoneBookActions';\r\n\r\nconst FilterInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nclass Filter extends Component {\r\n  handleChange = e => {\r\n    const {value} = e.target;\r\n\r\n    this.props.filterUpdated(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FilterInput themeProps={this.props.theme.config[this.props.theme.type]} type=\"text\" onChange={this.handleChange}\r\n                   name=\"filter\" autoComplete='off'/>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  filterUpdated: (filter) => phoneBookActions.filterUpdated(filter),\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withTheme(Filter));","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"react-toggle/style.css\";\nimport Toggle from 'react-toggle';\nimport withTheme from \"../hoc/withTheme\";\n\nconst ToggleLabel = styled.span`\nmargin: 10px;\n`;\n\nfunction ThemeSelector(themeProps) {\n\n  return (\n    <label>\n      <ToggleLabel>{themeProps.theme.type}</ToggleLabel>\n      <Toggle\n        type=\"checkbox\"\n        checked={themeProps.theme.type === \"dark\"}\n        onChange={() => themeProps.theme.toggleTheme()}\n      />\n    </label>\n\n  );\n}\n\nexport default withTheme(ThemeSelector)","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst Wrapper = styled.div`\r\nmargin: 0;\r\npadding: 10px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nfunction Container({children, theme}) {\r\n\r\n  return (\r\n    <Wrapper themeProps={theme.config[theme.type]}>\r\n      {children}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default withTheme(Container);","import React, { Component } from \"react\";\r\nimport AddContactForm from \"./AddContactForm\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport ThemeSelector from \"./ThemeSelector\";\r\nimport Container from \"./Container\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport { connect } from 'react-redux';\r\nimport * as phoneBookActions from '../redux/phoneBookActions';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    const storedContacts = localStorage.getItem('contacts');\r\n    if (storedContacts) {\r\n      this.props.loadContacts(storedContacts);\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.contacts !== this.props.contacts)\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Container>\r\n        <ThemeSelector />\r\n        <h2>PhoneBook</h2>\r\n        <AddContactForm/>\r\n        <h3>Contacts</h3>\r\n        <Filter/>\r\n        <ContactList />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadContacts: (contacts) => dispatch(phoneBookActions.loadContacts(contacts)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(App));","// import {Type} from './actionTypes';\nimport {combineReducers, createReducer} from '@reduxjs/toolkit';\nimport {addContact, deleteContact, filterUpdated, loadContacts} from './phoneBookActions';\n\nconst items = createReducer([], {\n  [addContact]: (state, action) => {\n    return [...state, action.payload]\n  },\n\n  [deleteContact]: (state, action) => {\n    return [\n      ...state.filter(contact => contact.id !== action.payload)\n    ]\n  },\n\n  [loadContacts]: (state, action) => {\n    return JSON.parse(action.payload);\n  }\n});\n\nconst filter = createReducer('', {\n\n  [filterUpdated]: (state, action) => {\n    return action.payload;\n  },\n});\n\nexport default combineReducers({\n  items,\n  filter\n});\n\n\n//\n// const phoneBookReducer = (store = initStore, action) => {\n//   switch (action.type) {\n//     case Type.ADD_CONTACT:\n//       return {\n//         ...store,\n//         contacts: [...store.contacts, action.payload]\n//       };\n//\n//     case Type.DELETE_CONTACT:\n//       return {\n//         ...store,\n//         contacts: store.contacts.filter(contact => contact.id !== action.payload.id)\n//       };\n//\n//     case Type.UPDATE_FILTER:\n//       return {\n//         ...store,\n//         filter: action.payload.filter\n//       };\n//\n//     case Type.LOAD_CONTACTS:\n//       return {\n//         ...store,\n//         contacts: JSON.parse(action.payload.contacts)\n//       };\n//\n//     default:\n//       return store;\n//   }\n// };\n//\n//\n// export default phoneBookReducer;","// import { createStore, combineReducers } from 'redux';\n// import { devToolsEnhancer } from 'redux-devtools-extension'\nimport {configureStore} from \"@reduxjs/toolkit\";\nimport phoneBookReducer from './phoneBookReducer';\n\nconst store = configureStore({\n    reducer: {\n      contacts: phoneBookReducer\n    }\n  }\n);\n\n// const rootReducer = combineReducers({\n//   contacts: phoneBookReducer\n// });\n//s\n// const store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\n\nimport ThemeContext from \"./context/themeContext\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeContext>\n            <App />\n        </ThemeContext>\n    </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}